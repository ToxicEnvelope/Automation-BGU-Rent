package il.co.bgurent.apis;

import java.io.BufferedReader;
import java.io.InputStreamReader;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

public abstract class AbstractAPIs {
	
	// FIELDS
	private String _uri;
	private String _token;
	private String _userAgent = "Mozilla/5.0";
	private final String _apiUrl = "https://bgurent.co.il/api/";
	
	
	// CONSTRUCTOROS
	public AbstractAPIs(String uri) {
		if(uri != null && !uri.isEmpty()) {
			this._uri = uri;
		}
	}
	public AbstractAPIs(String token, String uri) {
		if((token != null && !token.isEmpty()) && (uri != null && !uri.isEmpty())) {
			this._token = token;
			this._uri = uri;
		}
	}
	
	// GETTERS
	protected String getUserAgent() {
		return _userAgent;
	}
	protected String getUri() {
		return _uri;
	}
	protected String getToken() {
		return _token;
	}
	// SETTERS
	protected void setUri(String uri) {
		try {
			if(uri != null && !uri.isEmpty()) {
				this._uri = uri;
			}
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}
	protected void setUserAgent(String ua) {
		try {	
			if(ua != null && !ua.isEmpty()) {
				this._userAgent = ua;
			}
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}
	protected void setToken(String token) {
		try {
			if(token != null && !token.isEmpty()) {
				this._token = token;
			}
		}
		catch (Exception e) {
			e.printStackTrace();
		}
	}
	// ParseQuery
	protected HttpResponse ParseQuery(int rent, int rooms, int section) {
		try {
			HttpResponse res;
			if(rent != 0 && rooms == 0 && section == 0) {
				// https://bgurent.co.il/api/search?rent=1
				res = ExecutRequest(_apiUrl + getUri() + "?rent=" + rent);
			}
			else if(rent == 0 && rooms != 0 && section == 0) {
				// https://bgurent.co.il/api/search?rooms=1
				res = ExecutRequest(_apiUrl + getUri() + "?rooms=" + rooms);
			}
			else if(rent == 0 && rooms == 0 && section != 0) {
				// https://bgurent.co.il/api/search?rooms=1
				res = ExecutRequest(_apiUrl + getUri() + "?section_id=" + section);
			}
			return res;
			
		}
		catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	// ExecuteRequest
	private HttpResponse ExecutRequest(String url) {
		try {
			// https://bgurent.co.il/api/search?rent=6000&rooms=1&section_id=1
			//String url = "https://bgurent.co.il/api/" + getUri() + "?section_id=" + section;
			HttpClient client = new DefaultHttpClient();
			HttpGet request = new HttpGet(url);
			// Add Headers
			request.addHeader("User-Agent", getUserAgent());
			// Execute Request and store Response
			HttpResponse response = client.execute(request);
			// Print to log 
			System.out.println("\nSending 'GET' request to URL : " + url);
			System.out.println("Response Code : " +
	                       response.getStatusLine().getStatusCode()); // return code status --> 200 , 404 , 500, etc..
			// Store the context of the Response 
			BufferedReader rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
			StringBuffer result = new StringBuffer();
			String line = "";
			while ((line = rd.readLine()) != null) {
				result.append(line);
			}
			System.out.println(result.toString());
		}
		catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}
	
}
